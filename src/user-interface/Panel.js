import i from "./UserInterfaceElement.js"; import t from "../enums/Colour.js"; import { roundedRectangle as r } from "../../lib/DrawingHelpers.js"; import { context as s } from "../globals.js"; export default class o extends i { static BOTTOM_DIALOGUE = { x: 0, y: 8, width: 15, height: 3 }; static TOP_DIALOGUE = { x: 0, y: 0, width: 15, height: 3 }; static POKEMON_STATS = { x: 7.5, y: 3.5, width: 7, height: 7 }; static DEFAULT_PADDING = 20; static BORDER_WIDTH = 10; constructor(i, r, s, e, d = {}) { super(i, r, s, e), this.borderColour = d.borderColour ?? t.Grey, this.panelColour = d.panelColour ?? t.White, this.padding = d.padding ?? o.DEFAULT_PADDING, this.borderWidth = d.borderWidth ?? o.BORDER_WIDTH, this.isVisible = !0 } toJSON() { let i = super.toJSON(); return i.borderColour = this.borderColour, i.panelColour = this.panelColour, i.padding = this.padding, i.borderWidth = this.borderWidth, i.isVisible = this.isVisible, i } render() { this.isVisible && (s.save(), this.renderBackground(), this.renderForeground(), s.restore()) } renderBackground() { 0 !== this.borderWidth && (s.fillStyle = this.borderColour, r(s, this.position.x, this.position.y, this.dimensions.x, this.dimensions.y, this.borderWidth, !0, !1)) } renderForeground() { s.fillStyle = this.panelColour, r(s, this.position.x + this.borderWidth / 2, this.position.y + this.borderWidth / 2, this.dimensions.x - this.borderWidth, this.dimensions.y - this.borderWidth, this.borderWidth, !0, !1) } toggle() { this.isVisible = !this.isVisible } };
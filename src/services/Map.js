import e from "../enums/Colour.js"; import r from "../../lib/Sprite.js"; import t from "../../lib/Vector.js"; import o from "../entities/Player.js"; import s from "../enums/ImageName.js"; import i from "./Tile.js"; import l from "./Layer.js"; import { CANVAS_HEIGHT as m, CANVAS_WIDTH as a, context as n, DEBUG as p, images as S } from "../globals.js"; export default class h { constructor(e) { let t = r.generateSpritesFromSpriteSheet(S.get(s.Tiles), i.SIZE, i.SIZE); this.bottomLayer = new l(e.layers[l.BOTTOM], t), this.collisionLayer = new l(e.layers[l.COLLISION], t), this.topLayer = new l(e.layers[l.TOP], t) } update(e) { } render() { this.bottomLayer.render(), this.collisionLayer.render(), this.topLayer.render(), p && h.renderGrid() } static renderGrid() { n.save(), n.strokeStyle = e.White; for (let r = 1; r < m / i.SIZE; r++) { n.beginPath(), n.moveTo(0, r * i.SIZE), n.lineTo(a, r * i.SIZE), n.closePath(), n.stroke(); for (let t = 1; t < a / i.SIZE; t++)n.beginPath(), n.moveTo(t * i.SIZE, 0), n.lineTo(t * i.SIZE, m), n.closePath(), n.stroke() } n.restore() } };